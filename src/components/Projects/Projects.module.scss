@use "../../styles/abstracts" as abs;

.projects {
  position: relative;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  width: 100vw;
  height: var(--projectSection-height);
  box-shadow: inset 0rem 2rem 2rem -2rem abs.$dark-grey;
  background: abs.$bg-gradient-project1-2, abs.$bg-noise2;
  @include abs.respond-to("xs") {
    height: auto;
    background: abs.$dark-grey;
  }

  /* Particles id props i have to pass */

  &__container {
    position: relative;
    @include abs.flxAllCtrBox;
    flex-direction: column;
    width: 100%;
    height: 100vh;
    @include abs.respond-to("xs") {
      height: auto;
      width: 100%;
      padding: 2rem;
      box-sizing: border-box;
    }

    &__content {
      z-index: 0;
      @include abs.flxAllCtrBox;
      flex-direction: column;
      width: 100vw;
      height: 40vh;
      @include abs.respond-to("xs") {
        width: 100%;
        height: 10vh;
      }

      &__trigger {
        @include abs.flxAllCtrBox;
        text-align: center;
        font-size: 6rem;
        font-weight: 300;
        color: abs.$light-grey;
        width: auto;
        height: 100%;
        @include abs.respond-to("xs") {
          height: auto;
          font-size: 2rem;
          flex-wrap: wrap;
        }

        &__PR {
          width: auto;
          margin: 0 0 0 30rem;
          letter-spacing: 2rem;
          user-select: none;
          @include abs.respond-to("xs") {
            margin: 0 0.5rem 0 0rem;
            letter-spacing: 0.5rem;
          }
        }

        &__JECTS {
          letter-spacing: 2rem;
          user-select: none;
          @include abs.respond-to("xs") {
            margin: 0 0 0 0rem;
            letter-spacing: 0.5rem;
          }
        }
      }
    }
  }
}

@keyframes pulse {
  0% {
    transform: scale(0.95);
    opacity: 0.8;
  }
  50% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0.95);
    opacity: 0.8;
  }
}
